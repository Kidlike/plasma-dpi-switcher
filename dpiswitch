#! /usr/bin/env python3

import argparse
import sys
import os

from utils import *
from utils import validator, plasma

CONFIG_KDEGLOBALS = os.path.expanduser('~/.config/kdeglobals')
CONFIG_KCMFONTS = os.path.expanduser('~/.config/kcmfonts')
CONFIG_KCMINPUT = os.path.expanduser('~/.config/kcminputrc')
CONFIG_STARTUP = os.path.expanduser('~/.config/startupconfig')
CONFIG_SHELL = os.path.expanduser('~/.config/plasmashellrc')
CONFIG_APPLETS = os.path.expanduser('~/.config/plasma-org.kde.plasma.desktop-appletsrc')

parser = argparse.ArgumentParser(description="Command-line KDE Plasma DPI change utility")
parser.add_argument('--profile')
parser.add_argument('--config', default=get_default_config_filename())
parser.add_argument('--no-logout', action='store_true', help="Do not end current desktop session")

args = parser.parse_args()
try:
    validator.assert_valid_config(args.config, os.path.join(sys.path[0], 'schema.json'))
    config = load_config_file(args.config)

    profilename = args.profile if args.profile is not None else prompt_for_profile(config)
    profile = find_profile(config, profilename)

    if profile is None:
        raise Exception("Unable to find profile {}".format(profile))

    scale_factors = display_get_scaling_str(output_list_names(), profile.scaling)

    plasma.kill()

    plasma.config_write(CONFIG_KDEGLOBALS, "KScreen", "ScaleFactor", profile.scaling)
    plasma.config_write(CONFIG_KDEGLOBALS, "KScreen", "ScreenScaleFactors", scale_factors)
    plasma.config_write(CONFIG_KCMFONTS, "General", "forceFontDPI", get_font_dpi(profile.scaling))
    plasma.config_write(CONFIG_KCMINPUT, "Mouse", "cursorSize", profile.cursor.size)

    if os.path.isfile(CONFIG_STARTUP):
        os.remove(CONFIG_STARTUP)

    for panel in profile.panels:
        plasma.config_write(CONFIG_SHELL, panel.groups, "thickness", panel.thickness)

    for widget in profile.widgets:
        plasma.config_write(CONFIG_APPLETS, widget.groups, widget.key, widget.value)

    if not args.no_logout:
        plasma.session_end()
except Exception as e:
    print("[ERR] {}".format(e))
    exit(1)
